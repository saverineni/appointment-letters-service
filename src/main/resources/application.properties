server.port=${appPort:8000}
spring.datasource.url = jdbc:mysql://localhost:3306/appointment_letters?autoReconnect=true&useSSL=false
#spring.datasource.url = jdbc:mysql://appoint-letters-mysql.crqmpn3cqjzh.eu-west-2.rds.amazonaws.com:3306/appointment_letters?autoReconnect=true&useSSL=false

spring.datasource.username = root
spring.datasource.password = root
#spring.datasource.password = Mysql123

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.mail.host=smtp.gmail.com
spring.mail.port=25
spring.mail.username=suresh.test.javamail@gmail.com
spring.mail.password=Suresh123
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.debug=true

spring.main.banner_mode=off
spring.application.name=searchservice

jwt.expiration.seconds=3600
jwt.secret=appointment-letters